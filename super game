<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>The Shadowgate Trials</title>
<link href="https://fonts.googleapis.com/css2?family=Cinzel+Decorative:wght@700&family=Raleway:wght@300&display=swap" rel="stylesheet">
<style>
    body {
        margin: 0;
        height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        background: url('1869232-3840x2160-desktop-4k-valorant-background.jpg') no-repeat center center/cover;
        font-family: 'Segoe UI', sans-serif;
        overflow: hidden;
        position: relative;
    }

    canvas {
        position: absolute;
        top: 0;
        left: 0;
        z-index: 0;
    }

    h1 {
        font-family: 'Cinzel Decorative', serif;
        color: #f5e6d3;
        font-size: 60px;
        text-shadow: 0 0 15px rgba(255, 215, 0, 0.8),
                     0 0 30px rgba(255, 140, 0, 0.6),
                     0 0 50px rgba(255, 69, 0, 0.5);
        letter-spacing: 3px;
        margin-bottom: 10px;
        z-index: 1;
        text-align: center;
    }

    p {
        font-family: 'Raleway', sans-serif;
        color: #fff;
        font-size: 24px;
        text-align: center; /* keeps subtitle centered */
        margin: 0 0 50px 0; /* even spacing below title */
        text-shadow: 0 0 10px rgba(255,255,255,0.7);
        animation: fadeGlow 3s infinite alternate;
        z-index: 1;
    }

    @keyframes fadeGlow {
        from { opacity: 0.6; text-shadow: 0 0 10px rgba(255,255,255,0.4); }
        to   { opacity: 1; text-shadow: 0 0 20px rgba(255,255,255,0.8); }
    }

    #startButton {
        padding: 20px 50px;
        font-size: 22px;
        font-weight: bold;
        color: white;
        background: linear-gradient(135deg, #ff0033, #cc0000);
        border: none;
        border-radius: 12px;
        cursor: pointer;
        box-shadow: 0px 0px 20px rgba(255, 0, 0, 0.7);
        position: absolute;
        z-index: 1;
    }

    #startButton:hover {
        transform: scale(1.05);
    }
</style>
</head>
<body>
    <canvas id="particles"></canvas>
    <h1>The Shadowgate Trials</h1>
    <p>Only the worthy shall proceed</p>
    <button id="startButton">LET'S BEGIN</button>

<script>
    const button = document.getElementById('startButton');
    let targetX, targetY;
    let attemptCount = 0;
    let allowClick = false;

    function centerButton() {
        const rect = button.getBoundingClientRect();
        targetX = (window.innerWidth - rect.width) / 2;
        targetY = window.innerHeight / 2 + 120; // positioned below subtitle
        button.style.left = targetX + "px";
        button.style.top = targetY + "px";
    }

    function moveButton() {
        const rect = button.getBoundingClientRect();
        const currentX = rect.left;
        const currentY = rect.top;
        const dx = targetX - currentX;
        const dy = targetY - currentY;
        button.style.left = currentX + dx * 0.35 + "px"; // slightly faster
        button.style.top = currentY + dy * 0.35 + "px";
        requestAnimationFrame(moveButton);
    }

    document.addEventListener('mousemove', (e) => {
        if (allowClick) return; // Stop moving after unlock

        const rect = button.getBoundingClientRect();
        const distanceX = Math.abs(e.clientX - (rect.left + rect.width / 2));
        const distanceY = Math.abs(e.clientY - (rect.top + rect.height / 2));

        if (distanceX < 150 && distanceY < 100) {
            attemptCount++;
            if (attemptCount >= 20) {
                allowClick = true;
                return;
            }
            targetX = Math.random() * (window.innerWidth - rect.width);
            targetY = Math.random() * (window.innerHeight - rect.height);
        }
    });

    button.addEventListener('click', () => {
        if (allowClick) {
            alert("Congratulations, challenger. You have overcome the first trial. Now, your true journey begins...");
        }
    });

    // Particle effect
    const canvas = document.getElementById('particles');
    const ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const particles = [];
    for (let i = 0; i < 80; i++) {
        particles.push({
            x: Math.random() * canvas.width,
            y: Math.random() * canvas.height,
            size: Math.random() * 2,
            speedX: (Math.random() - 0.5) * 0.3,
            speedY: (Math.random() - 0.5) * 0.3
        });
    }

    function drawParticles() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = 'rgba(255,255,255,0.8)';
        particles.forEach(p => {
            ctx.beginPath();
            ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);
            ctx.fill();
        });
    }

    function updateParticles() {
        particles.forEach(p => {
            p.x += p.speedX;
            p.y += p.speedY;
            if (p.x < 0 || p.x > canvas.width) p.speedX *= -1;
            if (p.y < 0 || p.y > canvas.height) p.speedY *= -1;
        });
    }

    function animateParticles() {
        drawParticles();
        updateParticles();
        requestAnimationFrame(animateParticles);
    }

    window.addEventListener('resize', () => {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    });

    // Init
    centerButton();
    moveButton();
    animateParticles();
</script>
</body>
</html>
